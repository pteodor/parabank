# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - main

# Specifies the type of runner that the pipeline will run on.
pool:
  name: Default

steps:

# Configures your Maven project.  
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.17'
    jdkArchitectureOption: 'x64'
    goals: 'install jtest:jtest'
    options: '-Djtest.skip=true -DskipTests=true'

# Runs code analysis with Jtest.   
- task: RunJtest@1
  inputs:
    workingDir: '$(Build.Repository.LocalPath)'
    dataJson: 'target/jtest/jtest.data.json'
    testConfig: 'builtin://OWASP Top 10-2021'
#- task: PublishParasoftTestResults@1
#  inputs:
#    testRunner: 'XTest10x'
#    testResultsFiles: '**/rep*.xml'

# Runs Unit Tests.
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.17'
    jdkArchitectureOption: 'x64'
    goals: 'clean test-compile jtest:agent test jtest:jtest -Djtest.config="user://UnitTests"'

# Uploads analysis results in the SARIF format, so that they can be accessed in the 'Scans' tab.
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'reports/report.sarif'
    ArtifactName: 'CodeAnalysisLogs'
    publishLocation: 'Container'

# Uploads all report files (.xml, .html, .sarif) as build artifacts.
#- task: PublishBuildArtifacts@1
#  inputs:
#    PathtoPublish: 'reports'
#    ArtifactName: 'JtestReports'
#    publishLocation: 'Container'
